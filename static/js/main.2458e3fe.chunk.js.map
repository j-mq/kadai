{"version":3,"sources":["dataModels.ts","Components/SideBar/Menus/ThirdMenus.tsx","Components/SideBar/Menus/SecondMenus.tsx","Components/SideBar/Menus/MainMenus.tsx","Components/SideBar/SideBar.tsx","Components/Footer/Footer.tsx","Components/PageContent/Paragraph.tsx","Components/PageContent/MainContent.tsx","Components/MainLayout.tsx","index.tsx"],"names":["contentEditTypes","ThirdMenus","thirdMenus","removeThisMenu","showMenuContent","length","map","thMe","className","key","id","href","onClick","content","title","icon","faMinusCircle","SecondMenus","secondaryMenus","removeThisSecondMenu","removeThisThirdMenu","addMenuHere","seMe","faPlusCircle","thirdId","MainMenus","mainMenus","removeMainMenu","addSecondaryMenu","removeSecondaryMenu","addThirdMenu","removeThirdMenu","maMe","secondMenus","secondId","SideBar","updateMenus","paragraphDefault","mainId","currentMenus","cm","index","splice","targetMenu","filter","newSecondaryMenu","paragraph","text","mainMenuId","secondMenuId","push","maIndex","seIndex","targetSecondMenu","newThirdMenu","thirdMenuId","thIndex","newMenu","faPlus","Footer","Paragraph","removeThisParagraph","saveThisParagraph","useState","currentParagraph","setCurrentParagraph","editMode","setEditMode","useEffect","value","rows","onChange","e","target","html","type","faSave","faEdit","faTrashAlt","PageContent","currentPage","addParagraph","removeParagraph","saveTitle","saveParagraph","setTitle","pa","paragraphId","newParagraph","makeParagraphs","MainLayout","setMainMenus","setCurrentPage","editContentIterator","action","newText","editContent","menu","newMenus","newTitle","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2458e3fe.chunk.js","sourcesContent":["export interface IMainMenu {\n  secondMenus: ISecondMenus[];\n  id: number;\n  content: IMenuContent;\n}\n\nexport interface ISecondMenus {\n  thirdMenus: IThirdMenus[];\n  id: number;\n  content: IMenuContent;\n}\n\nexport interface IThirdMenus {\n  id: number;\n  content: IMenuContent;\n}\n\nexport interface IMenuContent {\n  title: string;\n  paragraph: IParagraph[];\n  mainMenuId: number;\n  secondMenuId?: number;\n  thirdMenuId?: number;\n}\n\nexport interface IParagraph {\n  id: number;\n  text: string;\n}\n\nexport enum contentEditTypes {\n  addParagraph,\n  removeParagraph,\n  saveTitle,\n  saveParagraph,\n}\n","import React, { Fragment } from \"react\";\nimport { IThirdMenus, IMenuContent } from \"../../../dataModels\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nexport interface Props {\n  thirdMenus: IThirdMenus[];\n  removeThisMenu: (thirdId: number) => void;\n  showMenuContent: (content: IMenuContent) => void;\n}\n\nconst ThirdMenus: React.FC<Props> = ({\n  thirdMenus,\n  removeThisMenu,\n  showMenuContent,\n}) => {\n  const makeThirdMenus = () =>\n    thirdMenus.length > 0 &&\n    thirdMenus.map((thMe) => (\n      <h6\n        className=\"d-flex justify-content-between align-items-center px-3 mb-0\"\n        key={`thirdMenu-${thMe.id}`}\n      >\n        <a\n          className=\"nav-link text-white m-0 p-0\"\n          href=\"#\"\n          onClick={() => showMenuContent(thMe.content)}\n        >\n          {thMe.content.title}\n        </a>\n        <div className=\"text-right\">\n          <button\n            className=\"btn btn-sm btn-link text-white p-0\"\n            onClick={() => removeThisMenu(thMe.id)}\n          >\n            <FontAwesomeIcon icon={faMinusCircle}></FontAwesomeIcon>\n          </button>\n        </div>\n      </h6>\n    ));\n\n  return <Fragment>{makeThirdMenus()}</Fragment>;\n};\n\nexport default ThirdMenus;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinusCircle, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { IMainMenu, ISecondMenus, IMenuContent } from \"../../../dataModels\";\nimport ThirdMenus from \"./ThirdMenus\";\n\nexport interface Props {\n  secondaryMenus: ISecondMenus[];\n  removeThisSecondMenu: (secondId: number) => void;\n  removeThisThirdMenu: (secondId: number, thirdId: number) => void;\n  addMenuHere: (secondId: number) => void;\n  showMenuContent: (content: IMenuContent) => void;\n}\n\nconst SecondMenus: React.FC<Props> = ({\n  secondaryMenus,\n  removeThisSecondMenu,\n  removeThisThirdMenu,\n  addMenuHere,\n  showMenuContent,\n}) => {\n  const makeSecondMenus = () =>\n    secondaryMenus.length > 0 &&\n    secondaryMenus.map((seMe) => (\n      <div className=\"mb-2\" key={`secondMenu-${seMe.id}`}>\n        <h5 className=\"d-flex justify-content-between align-items-center px-3 mb-1\">\n          <a\n            className=\"nav-link text-white m-0 p-0\"\n            href=\"#\"\n            onClick={() => showMenuContent(seMe.content)}\n          >\n            {seMe.content.title}\n          </a>\n          <div className=\"btn-group text-right\">\n            <button\n              className=\"btn btn-sm btn-link text-white mx-1 p-0\"\n              onClick={() => addMenuHere(seMe.id)}\n            >\n              <FontAwesomeIcon icon={faPlusCircle}></FontAwesomeIcon>\n            </button>\n            <button\n              className=\"btn btn-sm btn-link text-white p-0\"\n              onClick={() => removeThisSecondMenu(seMe.id)}\n            >\n              <FontAwesomeIcon icon={faMinusCircle}></FontAwesomeIcon>\n            </button>\n          </div>\n        </h5>\n        <ThirdMenus\n          thirdMenus={seMe.thirdMenus}\n          removeThisMenu={(thirdId) => removeThisThirdMenu(seMe.id, thirdId)}\n          showMenuContent={showMenuContent}\n        />\n      </div>\n    ));\n\n  return <Fragment>{makeSecondMenus()}</Fragment>;\n};\n\nexport default SecondMenus;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport SecondMenus from \"./SecondMenus\";\nimport { IMainMenu, IMenuContent } from \"../../../dataModels\";\n\nexport interface Props {\n  mainMenus: IMainMenu[];\n  removeMainMenu: (mainId: number) => void;\n  addSecondaryMenu: (maindId: number) => void;\n  removeSecondaryMenu: (mainId: number, secondId: number) => void;\n  addThirdMenu: (mainId: number, secondId: number) => void;\n  removeThirdMenu: (mainId: number, secondId: number, thirdId: number) => void;\n  showMenuContent: (content: IMenuContent) => void;\n}\n\nconst MainMenus: React.FC<Props> = ({\n  mainMenus,\n  removeMainMenu,\n  addSecondaryMenu,\n  removeSecondaryMenu,\n  addThirdMenu,\n  removeThirdMenu,\n  showMenuContent,\n}) => {\n  const makeMainMenus = () =>\n    mainMenus.length > 0 ? (\n      mainMenus.map((maMe) => (\n        <div className=\"mb-3\" key={`mainMenu-${maMe.id}`}>\n          <h4 className=\"d-flex justify-content-between align-items-center px-3\">\n            <a\n              className=\"nav-link text-white m-0 p-0\"\n              href=\"#\"\n              onClick={() => showMenuContent(maMe.content)}\n            >\n              {maMe.content.title}\n            </a>\n            <div className=\"btn-group text-right\">\n              <button\n                className=\"btn btn-sm btn-link text-white mx-1 p-0\"\n                onClick={() => addSecondaryMenu(maMe.id)}\n              >\n                <FontAwesomeIcon icon={faPlusCircle}></FontAwesomeIcon>\n              </button>\n              <button\n                className=\"btn btn-sm btn-link text-white p-0\"\n                onClick={() => removeMainMenu(maMe.id)}\n              >\n                <FontAwesomeIcon icon={faMinusCircle}></FontAwesomeIcon>\n              </button>\n            </div>\n          </h4>\n          <SecondMenus\n            secondaryMenus={maMe.secondMenus}\n            removeThisSecondMenu={(secondId) =>\n              removeSecondaryMenu(maMe.id, secondId)\n            }\n            removeThisThirdMenu={(secondId, thirdId) =>\n              removeThirdMenu(maMe.id, secondId, thirdId)\n            }\n            addMenuHere={(secondId) => addThirdMenu(maMe.id, secondId)}\n            showMenuContent={showMenuContent}\n          />\n        </div>\n      ))\n    ) : (\n      <div className=\"text-center\">Add a menu</div>\n    );\n\n  return <Fragment>{makeMainMenus()}</Fragment>;\n};\n\nexport default MainMenus;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport MainMenus from \"./Menus/MainMenus\";\nimport {\n  IMainMenu,\n  ISecondMenus,\n  IThirdMenus,\n  IMenuContent,\n} from \"../../dataModels\";\n\nexport interface Props {\n  mainMenus: IMainMenu[];\n  updateMenus: (newMenus: IMainMenu[]) => void;\n  showMenuContent: (content: IMenuContent) => void;\n}\n\nconst SideBar: React.FC<Props> = ({\n  mainMenus,\n  updateMenus,\n  showMenuContent,\n}) => {\n  const paragraphDefault = `<h2>Header 2</h2><p>paragraph</p><a href=\"#\">link</a>`;\n\n  const addMainMenu = () => {\n    let id = mainMenus.length > 0 ? mainMenus[mainMenus.length - 1].id + 1 : 0;\n\n    let currentMenus = [...mainMenus];\n    let newMenu: IMainMenu = {\n      secondMenus: [],\n      id: id,\n      content: {\n        title: \"Main Menu Title\",\n        paragraph: [\n          {\n            id: 0,\n            text: paragraphDefault,\n          },\n        ],\n        mainMenuId: id,\n      },\n    };\n    currentMenus.push(newMenu);\n    updateMenus(currentMenus);\n  };\n\n  const removeMainMenu = (mainId: number) => {\n    if (mainMenus.length > 0) {\n      let currentMenus = [...mainMenus];\n      mainMenus.map((cm, index) => {\n        if (cm.id === mainId) {\n          currentMenus.splice(index, 1);\n        }\n      });\n      updateMenus(currentMenus);\n    }\n  };\n\n  const addSecondaryMenu = (mainId: number) => {\n    const targetMenu = mainMenus.filter((maMe) => maMe.id === mainId);\n\n    let id =\n      targetMenu[0].secondMenus.length > 0\n        ? targetMenu[0].secondMenus[targetMenu[0].secondMenus.length - 1].id + 1\n        : 0;\n\n    let currentMenus = [...mainMenus];\n    let newSecondaryMenu: ISecondMenus = {\n      thirdMenus: [],\n      id: id,\n      content: {\n        title: \"Second Menu Title\",\n        paragraph: [{ id: 0, text: paragraphDefault }],\n        mainMenuId: mainId,\n        secondMenuId: id,\n      },\n    };\n\n    mainMenus.map((maMe, index) => {\n      if (maMe.id === mainId) {\n        currentMenus[index].secondMenus.push(newSecondaryMenu);\n      }\n    });\n    updateMenus(currentMenus);\n  };\n\n  const removeSecondaryMenu = (mainId: number, secondId: number) => {\n    const targetMenu = mainMenus.filter((maMe) => maMe.id === mainId);\n    if (targetMenu[0].secondMenus.length > 0) {\n      let currentMenus = [...mainMenus];\n      mainMenus.map((maMe, maIndex) => {\n        if (maMe.id == mainId) {\n          maMe.secondMenus.map((seMe, seIndex) => {\n            if (seMe.id === secondId) {\n              currentMenus[maIndex].secondMenus.splice(seIndex, 1);\n            }\n          });\n        }\n      });\n      updateMenus(currentMenus);\n    }\n  };\n\n  const addThirdMenu = (mainId: number, secondId: number) => {\n    const targetMenu = mainMenus.filter((maMe) => maMe.id === mainId);\n    const targetSecondMenu = targetMenu[0].secondMenus.filter(\n      (seMe) => seMe.id === secondId\n    );\n\n    let id =\n      targetSecondMenu[0].thirdMenus.length > 0\n        ? targetSecondMenu[0].thirdMenus[\n            targetSecondMenu[0].thirdMenus.length - 1\n          ].id + 1\n        : 0;\n\n    let currentMenus = [...mainMenus];\n    let newThirdMenu: IThirdMenus = {\n      id: id,\n      content: {\n        title: \"Third Menu Title\",\n        paragraph: [{ id: 0, text: paragraphDefault }],\n        mainMenuId: mainId,\n        secondMenuId: secondId,\n        thirdMenuId: id,\n      },\n    };\n\n    mainMenus.map((maMe, maIndex) => {\n      if (maMe.id === mainId) {\n        maMe.secondMenus.map((seMe, seIndex) => {\n          if (seMe.id === secondId) {\n            currentMenus[maIndex].secondMenus[seIndex].thirdMenus.push(\n              newThirdMenu\n            );\n          }\n        });\n      }\n    });\n    updateMenus(currentMenus);\n  };\n\n  const removeThirdMenu = (\n    mainId: number,\n    secondId: number,\n    thirdId: number\n  ) => {\n    const targetMenu = mainMenus.filter((maMe) => maMe.id === mainId);\n    const targetSecondMenu = targetMenu[0].secondMenus.filter(\n      (seMe) => seMe.id === secondId\n    );\n    if (targetSecondMenu[0].thirdMenus.length > 0) {\n      let currentMenus = [...mainMenus];\n      mainMenus.map((maMe, maIndex) => {\n        if (maMe.id == mainId) {\n          maMe.secondMenus.map((seMe, seIndex) => {\n            if (seMe.id === secondId) {\n              seMe.thirdMenus.map((thMe, thIndex) => {\n                if (thMe.id === thirdId) {\n                  currentMenus[maIndex].secondMenus[seIndex].thirdMenus.splice(\n                    thIndex,\n                    1\n                  );\n                }\n              });\n            }\n          });\n        }\n      });\n      updateMenus(currentMenus);\n    }\n  };\n\n  return (\n    <div className=\"sidebar-sticky pt-3 pb-3 text-white\">\n      <MainMenus\n        mainMenus={mainMenus}\n        removeMainMenu={removeMainMenu}\n        addSecondaryMenu={addSecondaryMenu}\n        removeSecondaryMenu={removeSecondaryMenu}\n        addThirdMenu={addThirdMenu}\n        removeThirdMenu={removeThirdMenu}\n        showMenuContent={showMenuContent}\n      />\n      <div className=\"text-center\">\n        <button\n          className=\"btn btn-sm btn-link text-white p-0\"\n          onClick={addMainMenu}\n        >\n          <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport \"./Footer.styles.css\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer bg-secondary mt-auto py-3\">\n      <div className=\"container text-right\">\n        <span className=\"innerText \">Jacobo Moreno, 7-7-2020</span>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport ReactHtml from \"raw-html-react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { IParagraph } from \"../../dataModels\";\n\nexport interface Props {\n  paragraph: IParagraph;\n  removeThisParagraph: (paragraphId: number) => void;\n  saveThisParagraph: (newParagraph: string, paragraphId: number) => void;\n}\n\nconst Paragraph: React.FC<Props> = ({\n  paragraph,\n  removeThisParagraph,\n  saveThisParagraph,\n}) => {\n  const [currentParagraph, setCurrentParagraph] = useState<IParagraph>(\n    paragraph\n  );\n\n  const [editMode, setEditMode] = useState<boolean>(false);\n\n  useEffect(() => {\n    setCurrentParagraph(paragraph);\n  }, [paragraph]);\n\n  const contentNotSaved = () => {\n    if (paragraph.text !== currentParagraph.text) {\n      return false;\n    }\n    return true;\n  };\n\n  const setHtmlAndSave = () => {\n    setEditMode(false);\n    saveThisParagraph(currentParagraph.text, currentParagraph.id);\n  };\n\n  return (\n    <div className=\"my-3\">\n      <p className=\"w-100\">\n        {editMode ? (\n          <textarea\n            className=\"form-control no-resize\"\n            value={currentParagraph.text}\n            rows={5}\n            onChange={(e) =>\n              setCurrentParagraph({\n                id: currentParagraph.id,\n                text: e.target.value,\n              })\n            }\n          ></textarea>\n        ) : (\n          <ReactHtml html={`${currentParagraph.text}`}></ReactHtml>\n        )}\n      </p>\n\n      <div className=\"text-right\">\n        {editMode ? (\n          <button\n            type=\"button\"\n            className=\"btn btn-primary btn-sm mr-1\"\n            onClick={() => setHtmlAndSave()}\n          >\n            <FontAwesomeIcon icon={faSave}></FontAwesomeIcon>\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            className=\"btn btn-primary btn-sm mr-1\"\n            onClick={() => setEditMode(true)}\n          >\n            <FontAwesomeIcon icon={faEdit}></FontAwesomeIcon>\n          </button>\n        )}\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-sm\"\n          onClick={() => removeThisParagraph(currentParagraph.id)}\n        >\n          <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>\n        </button>\n      </div>\n      <hr />\n    </div>\n  );\n};\n\nexport default Paragraph;\n","import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faPlus, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { IMenuContent } from \"../../dataModels\";\nimport \"./MainContent.styles.css\";\nimport Paragraph from \"./Paragraph\";\n\nexport interface Props {\n  currentPage: IMenuContent | null;\n  addParagraph: (\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => void;\n  removeParagraph: (\n    paragraphId: number,\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => void;\n  saveTitle: (\n    newTitle: string,\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => void;\n  saveParagraph: (\n    newParagraph: string,\n    paragraphId: number,\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => void;\n}\n\nconst PageContent: React.FC<Props> = ({\n  currentPage,\n  addParagraph,\n  removeParagraph,\n  saveTitle,\n  saveParagraph,\n}) => {\n  const [title, setTitle] = useState<string>(\n    currentPage ? currentPage.title : \"\"\n  );\n\n  const [editMode, setEditMode] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (currentPage) {\n      setTitle(currentPage.title);\n    }\n  }, [currentPage]);\n\n  const contentNotSaved = () => {\n    if (currentPage) {\n      if (title !== currentPage.title) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const makeParagraphs = () => {\n    if (!currentPage) {\n      return;\n    }\n    return currentPage.paragraph.map((pa) => (\n      <Paragraph\n        key={`paragraph-${pa.id}`}\n        paragraph={pa}\n        removeThisParagraph={(paragraphId) =>\n          removeParagraph(\n            paragraphId,\n            currentPage.mainMenuId,\n            currentPage.secondMenuId,\n            currentPage.thirdMenuId\n          )\n        }\n        saveThisParagraph={(newParagraph, paragraphId) =>\n          saveParagraph(\n            newParagraph,\n            paragraphId,\n            currentPage.mainMenuId,\n            currentPage.secondMenuId,\n            currentPage.thirdMenuId\n          )\n        }\n      ></Paragraph>\n    ));\n  };\n\n  const setTitleAndSave = () => {\n    if (!currentPage) {\n      return;\n    }\n    setEditMode(false);\n    saveTitle(\n      title,\n      currentPage.mainMenuId,\n      currentPage.secondMenuId,\n      currentPage.thirdMenuId\n    );\n  };\n\n  return currentPage ? (\n    <div>\n      <div>\n        {editMode ? (\n          <h1>\n            <input\n              type=\"text\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            ></input>\n          </h1>\n        ) : (\n          <h1>{title}</h1>\n        )}\n        <div className=\"text-right\">\n          {editMode ? (\n            <button\n              type=\"button\"\n              className=\"btn btn-primary btn-sm mr-1\"\n              onClick={() => setTitleAndSave()}\n            >\n              <FontAwesomeIcon icon={faSave}></FontAwesomeIcon>\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"btn btn-primary btn-sm mr-1\"\n              onClick={() => setEditMode(true)}\n            >\n              <FontAwesomeIcon icon={faEdit}></FontAwesomeIcon>\n            </button>\n          )}\n        </div>\n      </div>\n      {makeParagraphs()}\n      <div className=\"text-center\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-sm\"\n          onClick={() =>\n            addParagraph(\n              currentPage.mainMenuId,\n              currentPage.secondMenuId,\n              currentPage.thirdMenuId\n            )\n          }\n        >\n          <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>\n        </button>\n      </div>\n    </div>\n  ) : (\n    <div>Select a Menu</div>\n  );\n};\n\nexport default PageContent;\n","import React, { Fragment, useState } from \"react\";\nimport SideBar from \"./SideBar/SideBar\";\nimport Footer from \"./Footer/Footer\";\nimport PageContent from \"./PageContent/MainContent\";\nimport \"./SideBar/SideBar.styles.css\";\nimport {\n  IMainMenu,\n  IMenuContent,\n  IThirdMenus,\n  ISecondMenus,\n  contentEditTypes,\n} from \"../dataModels\";\n\nfunction MainLayout() {\n  const [mainMenus, setMainMenus] = useState<IMainMenu[]>([]);\n  const [currentPage, setCurrentPage] = useState<IMenuContent | null>(null);\n\n  const updateMenus = (newMenus: IMainMenu[]) => {\n    setMainMenus(newMenus);\n    if (newMenus.length <= 0) {\n      setCurrentPage(null);\n    }\n  };\n\n  const showMenuContent = (content: IMenuContent) => {\n    setCurrentPage(content);\n  };\n\n  const addParagraph = (\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => {\n    editContentIterator(\n      contentEditTypes.addParagraph,\n      mainMenuId,\n      secondMenuId,\n      thirdMenuId\n    );\n  };\n\n  const removeParagraph = (\n    paragraphId: number,\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => {\n    editContentIterator(\n      contentEditTypes.removeParagraph,\n      mainMenuId,\n      secondMenuId,\n      thirdMenuId,\n      paragraphId\n    );\n  };\n\n  const saveTitle = (\n    newTitle: string,\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => {\n    editContentIterator(\n      contentEditTypes.saveTitle,\n      mainMenuId,\n      secondMenuId,\n      thirdMenuId,\n      undefined,\n      newTitle\n    );\n  };\n\n  const saveParagraph = (\n    newParagraph: string,\n    paragraphId: number,\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => {\n    editContentIterator(\n      contentEditTypes.saveParagraph,\n      mainMenuId,\n      secondMenuId,\n      thirdMenuId,\n      paragraphId,\n      newParagraph\n    );\n  };\n\n  const editContentIterator = (\n    action: contentEditTypes,\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number,\n    paragraphId?: number,\n    newText?: string\n  ) => {\n    let currentMenus = [...mainMenus];\n    currentMenus.map((maMe) => {\n      if (maMe.id === mainMenuId) {\n        if (typeof secondMenuId !== \"undefined\") {\n          maMe.secondMenus.map((seMe) => {\n            if (seMe.id === secondMenuId) {\n              if (typeof thirdMenuId !== \"undefined\") {\n                seMe.thirdMenus.map((thMe) => {\n                  if (thMe.id === thirdMenuId) {\n                    editContent(action, thMe, paragraphId, newText);\n                    return;\n                  }\n                });\n              } else {\n                editContent(action, seMe, paragraphId, newText);\n                return;\n              }\n            }\n          });\n        } else {\n          editContent(action, maMe, paragraphId, newText);\n          return;\n        }\n      }\n    });\n    setMainMenus(currentMenus);\n  };\n\n  const editContent = (\n    action: contentEditTypes,\n    menu: IMainMenu | ISecondMenus | IThirdMenus,\n    paragraphId?: number,\n    newText?: string\n  ) => {\n    let paragraph = \"New paragraph\";\n    switch (action) {\n      case contentEditTypes.addParagraph:\n        let id =\n          menu.content.paragraph.length > 0\n            ? menu.content.paragraph[menu.content.paragraph.length - 1].id + 1\n            : 0;\n        menu.content.paragraph.push({ id: id, text: paragraph });\n        break;\n      case contentEditTypes.removeParagraph:\n        if (typeof paragraphId !== \"undefined\") {\n          menu.content.paragraph.map((pa, index) => {\n            if (pa.id === paragraphId) {\n              menu.content.paragraph.splice(index, 1);\n            }\n          });\n        }\n        break;\n      case contentEditTypes.saveTitle:\n        if (typeof newText !== \"undefined\") {\n          menu.content.title = newText;\n        }\n        break;\n      case contentEditTypes.saveParagraph:\n        if (\n          typeof newText !== \"undefined\" &&\n          typeof paragraphId !== \"undefined\"\n        ) {\n          menu.content.paragraph.map((pa, index) => {\n            if (pa.id === paragraphId) {\n              pa.text = newText;\n            }\n          });\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"container-fluid bg-light\">\n        <div className=\"row\">\n          <nav className=\"col-md-3 col-lg-2 d-md-block bg-dark sidebar collapse\">\n            <SideBar\n              mainMenus={mainMenus}\n              updateMenus={updateMenus}\n              showMenuContent={showMenuContent}\n            />\n          </nav>\n          <div className=\"col-md-9 p-5 mb-4\">\n            <PageContent\n              currentPage={currentPage}\n              addParagraph={addParagraph}\n              removeParagraph={removeParagraph}\n              saveTitle={saveTitle}\n              saveParagraph={saveParagraph}\n            />\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </Fragment>\n  );\n}\n\nexport default MainLayout;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MainLayout from \"./Components/MainLayout\";\nimport \"./Themes/app.scss\";\n//import \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainLayout />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}