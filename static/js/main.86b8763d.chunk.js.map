{"version":3,"sources":["dataModels.ts","Components/SideBar/ThirdMenus.tsx","Components/SideBar/SecondMenus.tsx","Components/SideBar/MainMenus.tsx","Components/SideBar/SideBar.tsx","Components/Footer/Footer.tsx","Components/PageContent/Paragraph.tsx","Components/PageContent/MainContent.tsx","Components/MainLayout.tsx","index.tsx"],"names":["contentEditTypes","ThirdMenus","thirdMenus","removeThisMenu","showMenuContent","length","map","thMe","className","key","id","href","onClick","content","icon","faMinusCircle","SecondMenus","secondaryMenus","removeThisSecondMenu","removeThisThirdMenu","addMenuHere","seMe","faPlusCircle","thirdId","MainMenus","mainMenus","removeMainMenu","addSecondaryMenu","removeSecondaryMenu","addThirdMenu","removeThirdMenu","maMe","secondMenus","secondId","SideBar","updateMenus","mainId","currentMenus","cm","index","splice","newSecondaryMenu","title","paragraph","text","mainMenuId","secondMenuId","push","sm","newThirdMenu","thirdMenuId","tm","newMenu","faPlus","Footer","Paragraph","removeThisParagraph","saveThisParagraph","useState","currentParagraph","setCurrentParagraph","useEffect","value","rows","onChange","e","target","type","disabled","faSave","faTrashAlt","PageContent","currentPage","addParagraph","removeParagraph","saveTitle","saveParagraph","setTitle","pa","paragraphId","newParagraph","makeParagraphs","MainLayout","setMainMenus","setCurrentPage","editContentIterator","action","newText","editContent","menu","newMenus","newTitle","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86b8763d.chunk.js","sourcesContent":["export interface IMainMenu {\n  secondMenus: ISecondMenus[];\n  id: number;\n  content: IMenuContent;\n}\n\nexport interface ISecondMenus {\n  thirdMenus: IThirdMenus[];\n  id: number;\n  content: IMenuContent;\n}\n\nexport interface IThirdMenus {\n  id: number;\n  content: IMenuContent;\n}\n\nexport interface IMenuContent {\n  title: string;\n  paragraph: IParagraph[];\n  mainMenuId: number;\n  secondMenuId?: number;\n  thirdMenuId?: number;\n}\n\nexport interface IParagraph {\n  id: number;\n  text: string;\n}\n\nexport enum contentEditTypes {\n  addParagraph,\n  removeParagraph,\n  saveTitle,\n  saveParagraph,\n}\n","import React, { Fragment } from \"react\";\nimport { IThirdMenus, IMenuContent } from \"../../dataModels\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nexport interface Props {\n  thirdMenus: IThirdMenus[];\n  removeThisMenu: (thirdId: number) => void;\n  showMenuContent: (content: IMenuContent) => void;\n}\n\nconst ThirdMenus: React.FC<Props> = ({\n  thirdMenus,\n  removeThisMenu,\n  showMenuContent,\n}) => {\n  const makeThirdMenus = () =>\n    thirdMenus.length > 0 &&\n    thirdMenus.map((thMe) => (\n      <h6\n        className=\"d-flex justify-content-between align-items-center px-3 mb-0\"\n        key={`thirdMenu-${thMe.id}`}\n      >\n        <a\n          className=\"nav-link text-white m-0 p-0\"\n          href=\"#\"\n          onClick={() => showMenuContent(thMe.content)}\n        >\n          3rd Menu\n        </a>\n        <div className=\"text-right\">\n          <button\n            className=\"btn btn-sm btn-link text-white p-0\"\n            onClick={() => removeThisMenu(thMe.id)}\n          >\n            <FontAwesomeIcon icon={faMinusCircle}></FontAwesomeIcon>\n          </button>\n        </div>\n      </h6>\n    ));\n\n  return <Fragment>{makeThirdMenus()}</Fragment>;\n};\n\nexport default ThirdMenus;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinusCircle, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { IMainMenu, ISecondMenus, IMenuContent } from \"../../dataModels\";\nimport ThirdMenus from \"./ThirdMenus\";\n\nexport interface Props {\n  secondaryMenus: ISecondMenus[];\n  removeThisSecondMenu: (secondId: number) => void;\n  removeThisThirdMenu: (secondId: number, thirdId: number) => void;\n  addMenuHere: (secondId: number) => void;\n  showMenuContent: (content: IMenuContent) => void;\n}\n\nconst SecondMenus: React.FC<Props> = ({\n  secondaryMenus,\n  removeThisSecondMenu,\n  removeThisThirdMenu,\n  addMenuHere,\n  showMenuContent,\n}) => {\n  const makeSecondMenus = () =>\n    secondaryMenus.length > 0 &&\n    secondaryMenus.map((seMe) => (\n      <div className=\"mb-2\" key={`secondMenu-${seMe.id}`}>\n        <h5 className=\"d-flex justify-content-between align-items-center px-3 mb-1\">\n          <a\n            className=\"nav-link text-white m-0 p-0\"\n            href=\"#\"\n            onClick={() => showMenuContent(seMe.content)}\n          >\n            2nd Menu\n          </a>\n          <div className=\"btn-group text-right\">\n            <button\n              className=\"btn btn-sm btn-link text-white mx-1 p-0\"\n              onClick={() => addMenuHere(seMe.id)}\n            >\n              <FontAwesomeIcon icon={faPlusCircle}></FontAwesomeIcon>\n            </button>\n            <button\n              className=\"btn btn-sm btn-link text-white p-0\"\n              onClick={() => removeThisSecondMenu(seMe.id)}\n            >\n              <FontAwesomeIcon icon={faMinusCircle}></FontAwesomeIcon>\n            </button>\n          </div>\n        </h5>\n        <ThirdMenus\n          thirdMenus={seMe.thirdMenus}\n          removeThisMenu={(thirdId) => removeThisThirdMenu(seMe.id, thirdId)}\n          showMenuContent={showMenuContent}\n        />\n      </div>\n    ));\n\n  return <Fragment>{makeSecondMenus()}</Fragment>;\n};\n\nexport default SecondMenus;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport SecondMenus from \"./SecondMenus\";\nimport { IMainMenu, IMenuContent } from \"../../dataModels\";\n\nexport interface Props {\n  mainMenus: IMainMenu[];\n  removeMainMenu: (mainId: number) => void;\n  addSecondaryMenu: (maindId: number) => void;\n  removeSecondaryMenu: (mainId: number, secondId: number) => void;\n  addThirdMenu: (mainId: number, secondId: number) => void;\n  removeThirdMenu: (mainId: number, secondId: number, thirdId: number) => void;\n  showMenuContent: (content: IMenuContent) => void;\n}\n\nconst MainMenus: React.FC<Props> = ({\n  mainMenus,\n  removeMainMenu,\n  addSecondaryMenu,\n  removeSecondaryMenu,\n  addThirdMenu,\n  removeThirdMenu,\n  showMenuContent,\n}) => {\n  const makeMainMenus = () =>\n    mainMenus.length > 0 ? (\n      mainMenus.map((maMe) => (\n        <div className=\"mb-3\" key={`mainMenu-${maMe.id}`}>\n          <h4 className=\"d-flex justify-content-between align-items-center px-3\">\n            <a\n              className=\"nav-link text-white m-0 p-0\"\n              href=\"#\"\n              onClick={() => showMenuContent(maMe.content)}\n            >\n              Main menu\n            </a>\n            <div className=\"btn-group text-right\">\n              <button\n                className=\"btn btn-sm btn-link text-white mx-1 p-0\"\n                onClick={() => addSecondaryMenu(maMe.id)}\n              >\n                <FontAwesomeIcon icon={faPlusCircle}></FontAwesomeIcon>\n              </button>\n              <button\n                className=\"btn btn-sm btn-link text-white p-0\"\n                onClick={() => removeMainMenu(maMe.id)}\n              >\n                <FontAwesomeIcon icon={faMinusCircle}></FontAwesomeIcon>\n              </button>\n            </div>\n          </h4>\n          <SecondMenus\n            secondaryMenus={maMe.secondMenus}\n            removeThisSecondMenu={(secondId) =>\n              removeSecondaryMenu(maMe.id, secondId)\n            }\n            removeThisThirdMenu={(secondId, thirdId) =>\n              removeThirdMenu(maMe.id, secondId, thirdId)\n            }\n            addMenuHere={(secondId) => addThirdMenu(maMe.id, secondId)}\n            showMenuContent={showMenuContent}\n          />\n        </div>\n      ))\n    ) : (\n      <div className=\"text-center\">Add a menu</div>\n    );\n\n  return <Fragment>{makeMainMenus()}</Fragment>;\n};\n\nexport default MainMenus;\n","import React, { useState } from \"react\";\nimport \"./SideBar.styles.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport MainMenus from \"./MainMenus\";\nimport {\n  IMainMenu,\n  ISecondMenus,\n  IThirdMenus,\n  IMenuContent,\n} from \"../../dataModels\";\n\nexport interface Props {\n  mainMenus: IMainMenu[];\n  updateMenus: (newMenus: IMainMenu[]) => void;\n  showMenuContent: (content: IMenuContent) => void;\n}\n\nconst SideBar: React.FC<Props> = ({\n  mainMenus,\n  updateMenus,\n  showMenuContent,\n}) => {\n  //console.log(\"The main menus\", mainMenus);\n\n  const addMainMenu = () => {\n    let id = mainMenus.length > 0 ? mainMenus[mainMenus.length - 1].id + 1 : 0;\n\n    let currentMenus = [...mainMenus];\n    let newMenu: IMainMenu = {\n      secondMenus: [],\n      id: id,\n      content: {\n        title: \"Main Menu Title\",\n        paragraph: [{ id: 0, text: \"Main Menu Paragraph\" }],\n        mainMenuId: id,\n      },\n    };\n    currentMenus.push(newMenu);\n    updateMenus(currentMenus);\n  };\n\n  const removeMainMenu = (mainId: number) => {\n    if (mainMenus.length > 0) {\n      let currentMenus = [...mainMenus];\n      mainMenus.map((cm, index) => {\n        if (cm.id === mainId) {\n          currentMenus.splice(index, 1);\n        }\n      });\n      updateMenus(currentMenus);\n    }\n  };\n\n  const addSecondaryMenu = (mainId: number) => {\n    let id =\n      mainMenus[mainId].secondMenus.length > 0\n        ? mainMenus[mainId].secondMenus[\n            mainMenus[mainId].secondMenus.length - 1\n          ].id + 1\n        : 0;\n\n    let currentMenus = [...mainMenus];\n    let newSecondaryMenu: ISecondMenus = {\n      thirdMenus: [],\n      id: id,\n      content: {\n        title: \"Second Menu Title\",\n        paragraph: [{ id: 0, text: \"Second Menu Paragraph\" }],\n        mainMenuId: mainId,\n        secondMenuId: id,\n      },\n    };\n    currentMenus[mainId].secondMenus.push(newSecondaryMenu);\n    updateMenus(currentMenus);\n  };\n\n  const removeSecondaryMenu = (mainId: number, secondId: number) => {\n    if (mainMenus[mainId].secondMenus.length > 0) {\n      let currentMenus = [...mainMenus];\n      mainMenus[mainId].secondMenus.map((sm, index) => {\n        if (sm.id === secondId) {\n          currentMenus[mainId].secondMenus.splice(index, 1);\n        }\n      });\n      updateMenus(currentMenus);\n    }\n  };\n\n  const addThirdMenu = (mainId: number, secondId: number) => {\n    let id =\n      mainMenus[mainId].secondMenus[secondId].thirdMenus.length > 0\n        ? mainMenus[mainId].secondMenus[secondId].thirdMenus[\n            mainMenus[mainId].secondMenus[secondId].thirdMenus.length - 1\n          ].id + 1\n        : 0;\n\n    let currentMenus = [...mainMenus];\n    let newThirdMenu: IThirdMenus = {\n      id: id,\n      content: {\n        title: \"Third Menu Title\",\n        paragraph: [{ id: 0, text: \"Third Menu Paragraph\" }],\n        mainMenuId: mainId,\n        secondMenuId: secondId,\n        thirdMenuId: id,\n      },\n    };\n    currentMenus[mainId].secondMenus[secondId].thirdMenus.push(newThirdMenu);\n    updateMenus(currentMenus);\n  };\n\n  const removeThirdMenu = (\n    mainId: number,\n    secondId: number,\n    thirdId: number\n  ) => {\n    if (mainMenus[mainId].secondMenus[secondId].thirdMenus.length > 0) {\n      let currentMenus = [...mainMenus];\n      mainMenus[mainId].secondMenus[secondId].thirdMenus.map((tm, index) => {\n        if (tm.id === thirdId) {\n          currentMenus[mainId].secondMenus[secondId].thirdMenus.splice(\n            index,\n            1\n          );\n        }\n      });\n      updateMenus(currentMenus);\n    }\n  };\n\n  return (\n    <nav className=\"col-md-2 d-none d-md-block bg-dark sidebar text-white\">\n      <div className=\"sidebar-inner\">\n        <MainMenus\n          mainMenus={mainMenus}\n          removeMainMenu={removeMainMenu}\n          addSecondaryMenu={addSecondaryMenu}\n          removeSecondaryMenu={removeSecondaryMenu}\n          addThirdMenu={addThirdMenu}\n          removeThirdMenu={removeThirdMenu}\n          showMenuContent={showMenuContent}\n        />\n        <div className=\"text-center\">\n          <button\n            className=\"btn btn-sm btn-link text-white p-0\"\n            onClick={addMainMenu}\n          >\n            <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>\n          </button>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport \"./Footer.styles.css\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer bg-secondary mt-auto py-3\">\n      <div className=\"container\">\n        <span className=\"innerText\">Footer</span>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { IParagraph } from \"../../dataModels\";\n\nexport interface Props {\n  paragraph: IParagraph;\n  removeThisParagraph: (paragraphId: number) => void;\n  saveThisParagraph: (newParagraph: string, paragraphId: number) => void;\n}\n\nconst Paragraph: React.FC<Props> = ({\n  paragraph,\n  removeThisParagraph,\n  saveThisParagraph,\n}) => {\n  const [currentParagraph, setCurrentParagraph] = useState<IParagraph>(\n    paragraph\n  );\n\n  useEffect(() => {\n    setCurrentParagraph(paragraph);\n  }, [paragraph]);\n\n  const contentNotSaved = () => {\n    if (paragraph.text !== currentParagraph.text) {\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <div className=\"my-3\">\n      <p className=\"w-100\">\n        <textarea\n          className=\"no-border form-control no-resize\"\n          value={currentParagraph.text}\n          rows={3}\n          onChange={(e) =>\n            setCurrentParagraph({\n              id: currentParagraph.id,\n              text: e.target.value,\n            })\n          }\n        ></textarea>\n      </p>\n\n      <div className=\"text-right\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-sm mr-1\"\n          disabled={contentNotSaved()}\n          onClick={() =>\n            saveThisParagraph(currentParagraph.text, currentParagraph.id)\n          }\n        >\n          <FontAwesomeIcon icon={faSave}></FontAwesomeIcon>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-sm\"\n          onClick={() => removeThisParagraph(currentParagraph.id)}\n        >\n          <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>\n        </button>\n      </div>\n      <hr />\n    </div>\n  );\n};\n\nexport default Paragraph;\n","import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { IMenuContent } from \"../../dataModels\";\nimport \"./MainContent.styles.css\";\nimport Paragraph from \"./Paragraph\";\n\nexport interface Props {\n  currentPage: IMenuContent | null;\n  addParagraph: (\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => void;\n  removeParagraph: (\n    paragraphId: number,\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => void;\n  saveTitle: (\n    newTitle: string,\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => void;\n  saveParagraph: (\n    newParagraph: string,\n    paragraphId: number,\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => void;\n}\n\nconst PageContent: React.FC<Props> = ({\n  currentPage,\n  addParagraph,\n  removeParagraph,\n  saveTitle,\n  saveParagraph,\n}) => {\n  const [title, setTitle] = useState<string>(\n    currentPage ? currentPage.title : \"\"\n  );\n\n  useEffect(() => {\n    if (currentPage) {\n      setTitle(currentPage.title);\n    }\n  }, [currentPage]);\n\n  const contentNotSaved = () => {\n    if (currentPage) {\n      if (title !== currentPage.title) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const makeParagraphs = () => {\n    if (!currentPage) {\n      return;\n    }\n    return currentPage.paragraph.map((pa) => (\n      <Paragraph\n        paragraph={pa}\n        removeThisParagraph={(paragraphId) =>\n          removeParagraph(\n            paragraphId,\n            currentPage.mainMenuId,\n            currentPage.secondMenuId,\n            currentPage.thirdMenuId\n          )\n        }\n        saveThisParagraph={(newParagraph, paragraphId) =>\n          saveParagraph(\n            newParagraph,\n            paragraphId,\n            currentPage.mainMenuId,\n            currentPage.secondMenuId,\n            currentPage.thirdMenuId\n          )\n        }\n      ></Paragraph>\n    ));\n  };\n\n  return currentPage ? (\n    <div>\n      <div>\n        <h1>\n          <input\n            className=\"no-border\"\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          ></input>\n        </h1>\n        <div className=\"text-right\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary btn-sm\"\n            disabled={contentNotSaved()}\n            onClick={() =>\n              saveTitle(\n                title,\n                currentPage.mainMenuId,\n                currentPage.secondMenuId,\n                currentPage.thirdMenuId\n              )\n            }\n          >\n            <FontAwesomeIcon icon={faSave}></FontAwesomeIcon>\n          </button>\n        </div>\n      </div>\n      {makeParagraphs()}\n      <div className=\"text-center\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary btn-sm\"\n          onClick={() =>\n            addParagraph(\n              currentPage.mainMenuId,\n              currentPage.secondMenuId,\n              currentPage.thirdMenuId\n            )\n          }\n        >\n          <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>\n        </button>\n      </div>\n    </div>\n  ) : (\n    <div>Select a Menu</div>\n  );\n};\n\nexport default PageContent;\n","import React, { Fragment, useState } from \"react\";\nimport SideBar from \"./SideBar/SideBar\";\nimport Footer from \"./Footer/Footer\";\nimport PageContent from \"./PageContent/MainContent\";\nimport {\n  IMainMenu,\n  IMenuContent,\n  IThirdMenus,\n  ISecondMenus,\n  contentEditTypes,\n} from \"../dataModels\";\n\nfunction MainLayout() {\n  const [mainMenus, setMainMenus] = useState<IMainMenu[]>([]);\n  const [currentPage, setCurrentPage] = useState<IMenuContent | null>(null);\n\n  const updateMenus = (newMenus: IMainMenu[]) => {\n    setMainMenus(newMenus);\n  };\n\n  const showMenuContent = (content: IMenuContent) => {\n    setCurrentPage(content);\n  };\n\n  const addParagraph = (\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => {\n    editContentIterator(\n      contentEditTypes.addParagraph,\n      mainMenuId,\n      secondMenuId,\n      thirdMenuId\n    );\n  };\n\n  const removeParagraph = (\n    paragraphId: number,\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => {\n    editContentIterator(\n      contentEditTypes.removeParagraph,\n      mainMenuId,\n      secondMenuId,\n      thirdMenuId,\n      paragraphId\n    );\n  };\n\n  const saveTitle = (\n    newTitle: string,\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => {\n    editContentIterator(\n      contentEditTypes.saveTitle,\n      mainMenuId,\n      secondMenuId,\n      thirdMenuId,\n      undefined,\n      newTitle\n    );\n  };\n\n  const saveParagraph = (\n    newParagraph: string,\n    paragraphId: number,\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number\n  ) => {\n    editContentIterator(\n      contentEditTypes.saveParagraph,\n      mainMenuId,\n      secondMenuId,\n      thirdMenuId,\n      paragraphId,\n      newParagraph\n    );\n  };\n\n  const editContentIterator = (\n    action: contentEditTypes,\n    mainMenuId: number,\n    secondMenuId?: number,\n    thirdMenuId?: number,\n    paragraphId?: number,\n    newText?: string\n  ) => {\n    let currentMenus = [...mainMenus];\n    currentMenus.map((maMe) => {\n      if (maMe.id === mainMenuId) {\n        if (typeof secondMenuId !== \"undefined\") {\n          maMe.secondMenus.map((seMe) => {\n            if (seMe.id === secondMenuId) {\n              if (typeof thirdMenuId !== \"undefined\") {\n                seMe.thirdMenus.map((thMe) => {\n                  if (thMe.id === thirdMenuId) {\n                    editContent(action, thMe, paragraphId, newText);\n                    return;\n                  }\n                });\n              } else {\n                editContent(action, seMe, paragraphId, newText);\n                return;\n              }\n            }\n          });\n        } else {\n          editContent(action, maMe, paragraphId, newText);\n          return;\n        }\n      }\n    });\n    setMainMenus(currentMenus);\n  };\n\n  const editContent = (\n    action: contentEditTypes,\n    menu: IMainMenu | ISecondMenus | IThirdMenus,\n    paragraphId?: number,\n    newText?: string\n  ) => {\n    let paragraph = \"New paragraph\";\n    switch (action) {\n      case contentEditTypes.addParagraph:\n        let id =\n          menu.content.paragraph.length > 0\n            ? menu.content.paragraph[menu.content.paragraph.length - 1].id + 1\n            : 0;\n        menu.content.paragraph.push({ id: id, text: paragraph });\n        break;\n      case contentEditTypes.removeParagraph:\n        if (typeof paragraphId !== \"undefined\") {\n          menu.content.paragraph.map((pa, index) => {\n            if (pa.id === paragraphId) {\n              menu.content.paragraph.splice(index, 1);\n            }\n          });\n        }\n        break;\n      case contentEditTypes.saveTitle:\n        if (typeof newText !== \"undefined\") {\n          menu.content.title = newText;\n        }\n        break;\n      case contentEditTypes.saveParagraph:\n        if (\n          typeof newText !== \"undefined\" &&\n          typeof paragraphId !== \"undefined\"\n        ) {\n          menu.content.paragraph.map((pa, index) => {\n            if (pa.id === paragraphId) {\n              pa.text = newText;\n            }\n          });\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            <SideBar\n              mainMenus={mainMenus}\n              updateMenus={updateMenus}\n              showMenuContent={showMenuContent}\n            />\n          </div>\n          <div className=\"col-md-10 p-5 mb-4\">\n            <PageContent\n              currentPage={currentPage}\n              addParagraph={addParagraph}\n              removeParagraph={removeParagraph}\n              saveTitle={saveTitle}\n              saveParagraph={saveParagraph}\n            />\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </Fragment>\n  );\n}\n\nexport default MainLayout;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport MainLayout from \"./Components/MainLayout\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainLayout />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}